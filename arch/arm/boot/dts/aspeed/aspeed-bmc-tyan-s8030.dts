// SPDX-License-Identifier: GPL-2.0+
/dts-v1/;

#include "aspeed-g5.dtsi"
#include <dt-bindings/gpio/aspeed-gpio.h>
#include <dt-bindings/interrupt-controller/irq.h>

/ {
	model = "Tyan S8030 BMC";
	compatible = "tyan,s8030-bmc", "aspeed,ast2500";

	chosen {
		stdout-path = &uart5;
		bootargs = "console=ttyS4,115200 earlycon";
	};

	memory {
		device_type = "memory";
		reg = <0x80000000 0x20000000>;
    };

	reserved-memory {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;

		gfx_memory: framebuffer {
			size = <0x01000000>; /* 16M */
			alignment = <0x01000000>;
			compatible = "shared-dma-pool";
			reusable;
		};

		video {
			size = <0x4000000>;
			alignment = <0x1000000>;
			compatible = "shared-dma-pool";
			no-map;
		};
	};
};

&fmc {
	status = "okay";
	flash@0 {
		status = "okay";
		m25p,fast-read;
		label = "bmc";
		spi-tx-bus-width = <0x02>;
#include "openbmc-flash-layout-64.dtsi"
	};
};

&uart1 {
	/* Rear RS-232 connector */
	status = "okay";
	clock-frequency = <0x16e3600>;
};

&uart5 {
	/* BMC "debug" (console) UART; connected to RS-232 connector
	 * on header; selectable via jumpers as alternative to uart2
	 */
	status = "okay";
	clock-frequency = <0x16e3600>;
};

&lpc_reset {
	status = "okay";
};

&i2c2 {
	status = "okay";

	/* PSU1 FRU @ 0xA0 */
	eeprom@70 {
		compatible = "atmel,24c02";
		reg = <0x70>;
	};

	/* PSU2 FRU @ 0xA2 */
	eeprom@72 {
		compatible = "atmel,24c02";
		reg = <0x72>;
	};

	/* PSU1 @ 0xB0 */
	power-supply@78 {
		compatible = "pmbus";
		reg = <0x78>;
	};

	/* PSU2 @ 0xB2 */
	power-supply@7a {
		compatible = "pmbus";
		reg = <0x7A>;
	};
};

&i2c7 {
	status = "okay";
};

&mac0 {
	status = "okay";
	use-ncsi;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_rmii1_default>;
};

&mac1 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_rgmii2_default &pinctrl_mdio2_default>;
};

/* Enable BMC VGA output to show an early (pre-BIOS) boot screen */
&gfx {
	status = "okay";
	memory-region = <&gfx_memory>;
};

&edac {
	status = "okay";
	reg = <0x1e6e0000 0x174 0x1e6e0200 0x1d4>;
	clock-frequency = <400000000>;
	clocks = <&syscon ASPEED_CLK_GATE_MCLK>;
};

/* We're following the GPIO naming as defined at
 * https://github.com/openbmc/docs/blob/master/designs/device-tree-gpio-naming.md.
 *
 * Notes on led-identify and id-button:
 * - A physical button is connected to id-button which
 *   triggers the clock on a D flip-flop. The /Q output of the
 *   flip-flop drives its D input.
 * - The flip-flop's Q output drives led-identify which is
 *   connected to LEDs.
 * - With that, every button press toggles the LED between on and off.
 *
 * Notes on power-, reset- and nmi- button and control:
 * - The -button signals can be used to monitor physical buttons.
 * - The -control signals can be used to actuate the specific
 *   operation.
 * - In hardware, the -button signals are connected to the -control
 *   signals through drivers with the -control signals being
 *   protected through diodes.
 */
&gpio {
	status = "okay";
	reg = <0x1e780000 0x1000>;
	gpio-ranges = <&pinctrl 0 0 220>;
	gpio-line-names =
	/*A0*/		"",
	/*A1*/		"",
	/*A2*/		"led-identify", /* in/out: BMC_CHASSIS_ID_LED_L */
	/*A3*/		"",
	/*A4*/		"",
	/*A5*/		"",
	/*A6*/		"",
	/*A7*/		"",
	/*B0-B7*/	"","","","","","","","",
	/*C0-C7*/	"","","","","","","","",
	/*D0*/		"",
	/*D1*/		"",
	/*D2*/		"power-chassis-good", /* in: PWR_GOOD_LED -- Check if this is Z3?*/
	/*D3*/		"platform-reset", /* in: RESET_LED_L */
	/*D4*/		"",
	/*D5*/		"",
	/*D6*/		"",
	/*D7*/		"",
	/*E0*/		"power-button", /* in: BMC_SYS_MON_PWR_BTN_L */
	/*E1*/		"power-chassis-control", /* out: BMC_ASSERT_PWR_BTN */
	/*E2*/		"reset-button", /* in: BMC_SYS_MOS_RST_BTN_L*/
	/*E3*/		"reset-control", /* out: BMC_ASSERT_RST_BTN */
	/*E4*/		"nmi-button", /* in: BMC_SYS_MON_NMI_BTN_L */
	/*E5*/		"nmi-control", /* out: BMC_ASSERT_NMI_BTN */
	/*E6*/		"TSI_RESERT",
	/*E7*/		"led-heartbeat", /* out: BMC_GPIOE7 */
	/*F0*/		"",
	/*F1*/		"clear-cmos-control", /* out: BMC_ASSERT_CLR_CMOS_L */
	/*F2*/		"",
	/*F3*/		"",
	/*F4*/		"led-fault", /* out: BMC_HWM_FAULT_LED_L */
	/*F5*/		"BMC_SYS_FAULT_LED_L",
	/*F6*/		"BMC_ASSERT_BIOS_WP_L",
	/*F7*/		"",
	/*G0-G7*/	"","","","","","","","",
	/*H0-H7*/	"","","","","","","","",
	/*I0-I7*/	"","","","","","","","",
	/*J0-J7*/	"","","","","","","","",
	/*K0-K7*/	"","","","","","","","",
	/*L0-L7*/	"","","","","","","","",
	/*M0-M7*/	"","","","","","","","",
	/*N0-N7*/	"","","","","","","","",
	/*O0-O7*/	"","","","","","","","",
	/*P0-P7*/	"","","","","","","","",
	/*Q0*/		"",
	/*Q1*/		"",
	/*Q2*/		"",
	/*Q3*/		"",
	/*Q4*/		"",
	/*Q5*/		"",
	/*Q6*/		"id-button", /* in: BMC_CHASSIS_ID_BTN_L */
	/*Q7*/		"",
	/*R0-R7*/	"","","","","","","","",
	/*S0-S7*/	"","","","","","","","",
	/*T0-T7*/	"","","","","","","","",
	/*U0-U7*/	"","","","","","","","",
	/*V0-V7*/	"","","","","","","","",
	/*W0-W7*/	"","","","","","","","",
	/*X0-X7*/	"","","","","","","","",
	/*Y0-Y7*/	"","","","","","","","",
	/*Z0-Z2*/	"","","",
	/*Z3*/		"post-complete", /* BMC_SYS_MON_PWROK */
	/*Z4-Z7*/	"","","","",
	/*AA0*/		"",
	/*AA1*/		"",
	/*AA2*/		"",
	/*AA3*/		"",
	/*AA4*/		"",
	/*AA5*/		"",
	/*AA6*/		"",
	/*AA7*/		"BMC_ASSERT_BMC_READY",
	/*AB0*/		"BMC_SPD_SEL",
	/*AB1-AB7*/	"","","","","","","";
};
